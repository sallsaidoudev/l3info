Proposed syntax of new version of the parser

<Exp> := 
  | <Const> 
  | $<Id> 
  | <Exp> + <Exp> | <Exp> - <Exp>
  | <Exp> * <Exp> | <Exp> / <Exp>
  | <Id> <Arg> ... <Arg>
  | <Exp> == <Exp> | <Exp> != <Exp> | <Exp> > <Exp>
  | <Exp> & <Exp> | <Exp> \| <Exp>
  | !<Exp>
  | <Exp> ^ <Exp>
  | (<Exp>,<Exp>, ..) 
  | <Exp> @ <Exp> 
  | <Exp> : <Exp>
  | <Exp>[<Exp>]
  | (<Exp>)
  | <Id>++ | <Id>--
  | <Exp>; <Exp>
  | var <Id>
  | if <Exp> then <Exp> else <Exp> 
  | while <Exp> do <Exp>
  | <Id> = <Exp>
  | (<Id>, <Id>, ...) = <Exp>
  | (<Id> : <Id>) = <Exp>
  
<Arg> := 
  | (<Exp>)
  | <Const>
  | $<Id>

Operator precedence
( , )
( )
- (unary)
*
+
! (unary)
&
|
^
:
@
==
=
keywords
